# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'plugin_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_RPA_Footprints(object):
    def setupUi(self, RPA_Footprints):
        RPA_Footprints.setObjectName("RPA_Footprints")
        RPA_Footprints.resize(488, 535)
        self.mainLayout = QtWidgets.QVBoxLayout(RPA_Footprints)
        self.mainLayout.setObjectName("mainLayout")
        self.tabWidget = QtWidgets.QTabWidget(RPA_Footprints)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_generate_footprints = QtWidgets.QWidget()
        self.tab_generate_footprints.setObjectName("tab_generate_footprints")
        self.layoutWidget = QtWidgets.QWidget(self.tab_generate_footprints)
        self.layoutWidget.setGeometry(QtCore.QRect(14, 10, 421, 58))
        self.layoutWidget.setObjectName("layoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.layoutWidget)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.outputFolderLayout = QtWidgets.QHBoxLayout()
        self.outputFolderLayout.setObjectName("outputFolderLayout")
        self.outputFolderLine = QtWidgets.QLineEdit(self.layoutWidget)
        self.outputFolderLine.setObjectName("outputFolderLine")
        self.outputFolderLayout.addWidget(self.outputFolderLine)
        self.btnOutputFolder = QtWidgets.QPushButton(self.layoutWidget)
        self.btnOutputFolder.setObjectName("btnOutputFolder")
        self.outputFolderLayout.addWidget(self.btnOutputFolder)
        self.formLayout.setLayout(1, QtWidgets.QFormLayout.FieldRole, self.outputFolderLayout)
        self.inputFolderLayout = QtWidgets.QHBoxLayout()
        self.inputFolderLayout.setObjectName("inputFolderLayout")
        self.inputFolderLine = QtWidgets.QLineEdit(self.layoutWidget)
        self.inputFolderLine.setObjectName("inputFolderLine")
        self.inputFolderLayout.addWidget(self.inputFolderLine)
        self.btnInputFolder = QtWidgets.QPushButton(self.layoutWidget)
        self.btnInputFolder.setObjectName("btnInputFolder")
        self.inputFolderLayout.addWidget(self.btnInputFolder)
        self.formLayout.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.inputFolderLayout)
        self.labelOutputFolder = QtWidgets.QLabel(self.layoutWidget)
        self.labelOutputFolder.setObjectName("labelOutputFolder")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelOutputFolder)
        self.labelInputFolder = QtWidgets.QLabel(self.layoutWidget)
        self.labelInputFolder.setObjectName("labelInputFolder")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelInputFolder)
        self.btnToggleAdvancedOptions = QtWidgets.QPushButton(self.tab_generate_footprints)
        self.btnToggleAdvancedOptions.setGeometry(QtCore.QRect(15, 70, 421, 23))
        self.btnToggleAdvancedOptions.setObjectName("btnToggleAdvancedOptions")
        self.advancedOptionsGroup = QtWidgets.QGroupBox(self.tab_generate_footprints)
        self.advancedOptionsGroup.setGeometry(QtCore.QRect(10, 100, 431, 131))
        self.advancedOptionsGroup.setObjectName("advancedOptionsGroup")
        self.advancedOptionsLayout = QtWidgets.QFormLayout(self.advancedOptionsGroup)
        self.advancedOptionsLayout.setObjectName("advancedOptionsLayout")
        self.labelHeight = QtWidgets.QLabel(self.advancedOptionsGroup)
        self.labelHeight.setObjectName("labelHeight")
        self.advancedOptionsLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelHeight)
        self.heightLine = QtWidgets.QLineEdit(self.advancedOptionsGroup)
        self.heightLine.setObjectName("heightLine")
        self.advancedOptionsLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.heightLine)
        self.labelSensorWidth = QtWidgets.QLabel(self.advancedOptionsGroup)
        self.labelSensorWidth.setObjectName("labelSensorWidth")
        self.advancedOptionsLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelSensorWidth)
        self.sensorWidthLine = QtWidgets.QLineEdit(self.advancedOptionsGroup)
        self.sensorWidthLine.setObjectName("sensorWidthLine")
        self.advancedOptionsLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.sensorWidthLine)
        self.labelSensorHeight = QtWidgets.QLabel(self.advancedOptionsGroup)
        self.labelSensorHeight.setObjectName("labelSensorHeight")
        self.advancedOptionsLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.labelSensorHeight)
        self.sensorHeightLine = QtWidgets.QLineEdit(self.advancedOptionsGroup)
        self.sensorHeightLine.setObjectName("sensorHeightLine")
        self.advancedOptionsLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.sensorHeightLine)
        self.labelGimbalPitch = QtWidgets.QLabel(self.advancedOptionsGroup)
        self.labelGimbalPitch.setObjectName("labelGimbalPitch")
        self.advancedOptionsLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.labelGimbalPitch)
        self.gimbalPitchLine = QtWidgets.QLineEdit(self.advancedOptionsGroup)
        self.gimbalPitchLine.setObjectName("gimbalPitchLine")
        self.advancedOptionsLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.gimbalPitchLine)
        self.progressBar = QtWidgets.QProgressBar(self.tab_generate_footprints)
        self.progressBar.setGeometry(QtCore.QRect(10, 270, 421, 21))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.runButton = QtWidgets.QPushButton(self.tab_generate_footprints)
        self.runButton.setGeometry(QtCore.QRect(10, 300, 421, 23))
        self.runButton.setObjectName("runButton")
        self.checkbox_merge = QtWidgets.QCheckBox(self.tab_generate_footprints)
        self.checkbox_merge.setGeometry(QtCore.QRect(20, 240, 151, 17))
        self.checkbox_merge.setChecked(True)
        self.checkbox_merge.setObjectName("checkbox_merge")
        self.tabWidget.addTab(self.tab_generate_footprints, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.layoutWidget_2 = QtWidgets.QWidget(self.tab)
        self.layoutWidget_2.setGeometry(QtCore.QRect(10, 10, 421, 31))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.plotformlayout = QtWidgets.QFormLayout(self.layoutWidget_2)
        self.plotformlayout.setContentsMargins(0, 0, 0, 0)
        self.plotformlayout.setObjectName("plotformlayout")
        self.label_inputgeojson = QtWidgets.QLabel(self.layoutWidget_2)
        self.label_inputgeojson.setObjectName("label_inputgeojson")
        self.plotformlayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_inputgeojson)
        self.inputFolderLayout_2 = QtWidgets.QHBoxLayout()
        self.inputFolderLayout_2.setObjectName("inputFolderLayout_2")
        self.input_geojsonLine = QtWidgets.QLineEdit(self.layoutWidget_2)
        self.input_geojsonLine.setObjectName("input_geojsonLine")
        self.inputFolderLayout_2.addWidget(self.input_geojsonLine)
        self.btninput_geojson = QtWidgets.QPushButton(self.layoutWidget_2)
        self.btninput_geojson.setObjectName("btninput_geojson")
        self.inputFolderLayout_2.addWidget(self.btninput_geojson)
        self.plotformlayout.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.inputFolderLayout_2)
        self.btnplot3danimation = QtWidgets.QPushButton(self.tab)
        self.btnplot3danimation.setGeometry(QtCore.QRect(10, 50, 161, 23))
        self.btnplot3danimation.setObjectName("btnplot3danimation")
        self.tabWidget_plot3d = QtWidgets.QTabWidget(self.tab)
        self.tabWidget_plot3d.setGeometry(QtCore.QRect(10, 90, 441, 391))
        self.tabWidget_plot3d.setObjectName("tabWidget_plot3d")
        self.tab_3d_2 = QtWidgets.QWidget()
        self.tab_3d_2.setObjectName("tab_3d_2")
        self.plotWidget = QtWidgets.QWidget(self.tab_3d_2)
        self.plotWidget.setGeometry(QtCore.QRect(0, 0, 431, 361))
        self.plotWidget.setObjectName("plotWidget")
        self.group_plot = QtWidgets.QGroupBox(self.plotWidget)
        self.group_plot.setGeometry(QtCore.QRect(0, 0, 431, 361))
        self.group_plot.setTitle("")
        self.group_plot.setObjectName("group_plot")
        self.plotlayout_3d_2 = QtWidgets.QVBoxLayout(self.group_plot)
        self.plotlayout_3d_2.setObjectName("plotlayout_3d_2")
        self.tabWidget_plot3d.addTab(self.tab_3d_2, "")
        self.tabWidget.addTab(self.tab, "")
        self.tab_visualise = QtWidgets.QWidget()
        self.tab_visualise.setObjectName("tab_visualise")
        self.group_parameters = QtWidgets.QGroupBox(self.tab_visualise)
        self.group_parameters.setGeometry(QtCore.QRect(10, 10, 441, 141))
        self.group_parameters.setObjectName("group_parameters")
        self.height_slider = QtWidgets.QSlider(self.group_parameters)
        self.height_slider.setGeometry(QtCore.QRect(150, 20, 71, 22))
        self.height_slider.setMinimum(1)
        self.height_slider.setMaximum(200)
        self.height_slider.setProperty("value", 50)
        self.height_slider.setOrientation(QtCore.Qt.Horizontal)
        self.height_slider.setObjectName("height_slider")
        self.height_label = QtWidgets.QLabel(self.group_parameters)
        self.height_label.setGeometry(QtCore.QRect(10, 20, 81, 16))
        self.height_label.setObjectName("height_label")
        self.pitch_label = QtWidgets.QLabel(self.group_parameters)
        self.pitch_label.setGeometry(QtCore.QRect(10, 40, 71, 16))
        self.pitch_label.setObjectName("pitch_label")
        self.yaw_label = QtWidgets.QLabel(self.group_parameters)
        self.yaw_label.setGeometry(QtCore.QRect(10, 60, 71, 16))
        self.yaw_label.setObjectName("yaw_label")
        self.focal_length_label = QtWidgets.QLabel(self.group_parameters)
        self.focal_length_label.setGeometry(QtCore.QRect(10, 80, 131, 16))
        self.focal_length_label.setObjectName("focal_length_label")
        self.sensor_width_label = QtWidgets.QLabel(self.group_parameters)
        self.sensor_width_label.setGeometry(QtCore.QRect(250, 20, 101, 16))
        self.sensor_width_label.setObjectName("sensor_width_label")
        self.sensor_height_label = QtWidgets.QLabel(self.group_parameters)
        self.sensor_height_label.setGeometry(QtCore.QRect(250, 40, 101, 16))
        self.sensor_height_label.setObjectName("sensor_height_label")
        self.image_height_label = QtWidgets.QLabel(self.group_parameters)
        self.image_height_label.setGeometry(QtCore.QRect(250, 80, 91, 16))
        self.image_height_label.setObjectName("image_height_label")
        self.image_width_label = QtWidgets.QLabel(self.group_parameters)
        self.image_width_label.setGeometry(QtCore.QRect(250, 60, 91, 16))
        self.image_width_label.setObjectName("image_width_label")
        self.pitch_slider = QtWidgets.QSlider(self.group_parameters)
        self.pitch_slider.setGeometry(QtCore.QRect(150, 40, 71, 22))
        self.pitch_slider.setMinimum(-90)
        self.pitch_slider.setMaximum(-1)
        self.pitch_slider.setProperty("value", -90)
        self.pitch_slider.setOrientation(QtCore.Qt.Horizontal)
        self.pitch_slider.setObjectName("pitch_slider")
        self.yaw_slider = QtWidgets.QSlider(self.group_parameters)
        self.yaw_slider.setGeometry(QtCore.QRect(150, 60, 71, 22))
        self.yaw_slider.setMaximum(360)
        self.yaw_slider.setOrientation(QtCore.Qt.Horizontal)
        self.yaw_slider.setObjectName("yaw_slider")
        self.focallength_slider = QtWidgets.QSlider(self.group_parameters)
        self.focallength_slider.setGeometry(QtCore.QRect(150, 80, 71, 22))
        self.focallength_slider.setMinimum(10)
        self.focallength_slider.setMaximum(1500)
        self.focallength_slider.setPageStep(5)
        self.focallength_slider.setProperty("value", 350)
        self.focallength_slider.setOrientation(QtCore.Qt.Horizontal)
        self.focallength_slider.setObjectName("focallength_slider")
        self.sensor_width = QtWidgets.QLineEdit(self.group_parameters)
        self.sensor_width.setGeometry(QtCore.QRect(350, 20, 51, 20))
        self.sensor_width.setObjectName("sensor_width")
        self.sensor_height = QtWidgets.QLineEdit(self.group_parameters)
        self.sensor_height.setGeometry(QtCore.QRect(350, 40, 51, 20))
        self.sensor_height.setObjectName("sensor_height")
        self.image_width = QtWidgets.QLineEdit(self.group_parameters)
        self.image_width.setGeometry(QtCore.QRect(350, 60, 51, 20))
        self.image_width.setObjectName("image_width")
        self.image_height = QtWidgets.QLineEdit(self.group_parameters)
        self.image_height.setGeometry(QtCore.QRect(350, 80, 51, 20))
        self.image_height.setObjectName("image_height")
        self.gsd_label = QtWidgets.QLabel(self.group_parameters)
        self.gsd_label.setGeometry(QtCore.QRect(10, 110, 171, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.gsd_label.setFont(font)
        self.gsd_label.setObjectName("gsd_label")
        self.area_label = QtWidgets.QLabel(self.group_parameters)
        self.area_label.setGeometry(QtCore.QRect(160, 110, 151, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.area_label.setFont(font)
        self.area_label.setObjectName("area_label")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab_visualise)
        self.tabWidget_2.setGeometry(QtCore.QRect(10, 160, 441, 321))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3d = QtWidgets.QWidget()
        self.tab_3d.setObjectName("tab_3d")
        self.plotWidget_3d = QtWidgets.QWidget(self.tab_3d)
        self.plotWidget_3d.setGeometry(QtCore.QRect(0, 0, 431, 291))
        self.plotWidget_3d.setObjectName("plotWidget_3d")
        self.group_plot_3d = QtWidgets.QGroupBox(self.plotWidget_3d)
        self.group_plot_3d.setGeometry(QtCore.QRect(0, 0, 431, 291))
        self.group_plot_3d.setTitle("")
        self.group_plot_3d.setObjectName("group_plot_3d")
        self.plotlayout_3d = QtWidgets.QVBoxLayout(self.group_plot_3d)
        self.plotlayout_3d.setObjectName("plotlayout_3d")
        self.tabWidget_2.addTab(self.tab_3d, "")
        self.tabWidget.addTab(self.tab_visualise, "")
        self.tab_about = QtWidgets.QWidget()
        self.tab_about.setObjectName("tab_about")
        self.textBrowser = QtWidgets.QTextBrowser(self.tab_about)
        self.textBrowser.setGeometry(QtCore.QRect(10, 10, 421, 461))
        self.textBrowser.setObjectName("textBrowser")
        self.tabWidget.addTab(self.tab_about, "")
        self.mainLayout.addWidget(self.tabWidget)

        self.retranslateUi(RPA_Footprints)
        self.tabWidget.setCurrentIndex(1)
        self.tabWidget_plot3d.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(RPA_Footprints)

    def retranslateUi(self, RPA_Footprints):
        _translate = QtCore.QCoreApplication.translate
        RPA_Footprints.setWindowTitle(_translate("RPA_Footprints", "RPA Footprints"))
        self.btnOutputFolder.setText(_translate("RPA_Footprints", "Browse..."))
        self.btnInputFolder.setText(_translate("RPA_Footprints", "Browse..."))
        self.labelOutputFolder.setText(_translate("RPA_Footprints", "Output Folder:"))
        self.labelInputFolder.setText(_translate("RPA_Footprints", "Input Folder:"))
        self.btnToggleAdvancedOptions.setText(_translate("RPA_Footprints", "Show Advanced Options"))
        self.advancedOptionsGroup.setTitle(_translate("RPA_Footprints", "Advanced Options"))
        self.labelHeight.setText(_translate("RPA_Footprints", "Height:"))
        self.labelSensorWidth.setText(_translate("RPA_Footprints", "Sensor Width:"))
        self.labelSensorHeight.setText(_translate("RPA_Footprints", "Sensor Height:"))
        self.labelGimbalPitch.setText(_translate("RPA_Footprints", "Gimbal Pitch (degrees):"))
        self.runButton.setText(_translate("RPA_Footprints", "Run"))
        self.checkbox_merge.setText(_translate("RPA_Footprints", "Merge footprints"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_generate_footprints), _translate("RPA_Footprints", "Generate Footprints"))
        self.label_inputgeojson.setText(_translate("RPA_Footprints", "Input GeoJSON:"))
        self.btninput_geojson.setText(_translate("RPA_Footprints", "Browse..."))
        self.btnplot3danimation.setText(_translate("RPA_Footprints", "Plot 3D Animation"))
        self.tabWidget_plot3d.setTabText(self.tabWidget_plot3d.indexOf(self.tab_3d_2), _translate("RPA_Footprints", "3D"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("RPA_Footprints", "Plot"))
        self.group_parameters.setTitle(_translate("RPA_Footprints", "Parameters"))
        self.height_label.setText(_translate("RPA_Footprints", "Height (m): 50"))
        self.pitch_label.setText(_translate("RPA_Footprints", "Pitch (°): -90"))
        self.yaw_label.setText(_translate("RPA_Footprints", "Yaw (°): 0"))
        self.focal_length_label.setText(_translate("RPA_Footprints", "Focal length (mm): 35"))
        self.sensor_width_label.setText(_translate("RPA_Footprints", "Sensor width (mm)"))
        self.sensor_height_label.setText(_translate("RPA_Footprints", "Sensor height (mm)"))
        self.image_height_label.setText(_translate("RPA_Footprints", "Image height (px)"))
        self.image_width_label.setText(_translate("RPA_Footprints", "Image width (px)"))
        self.sensor_width.setText(_translate("RPA_Footprints", "35.9"))
        self.sensor_height.setText(_translate("RPA_Footprints", "24"))
        self.image_width.setText(_translate("RPA_Footprints", "8192"))
        self.image_height.setText(_translate("RPA_Footprints", "5460"))
        self.gsd_label.setText(_translate("RPA_Footprints", "GSD (cm) = "))
        self.area_label.setText(_translate("RPA_Footprints", "Area (m²) = "))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3d), _translate("RPA_Footprints", "3D"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_visualise), _translate("RPA_Footprints", "Simulator"))
        self.textBrowser.setHtml(_translate("RPA_Footprints", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">What is a \'footprint\'?</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt; font-weight:600;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">A footprint is a polygon representing the approximate area on the ground visible in a drone image. Drone images only store the GPS location that the photo was taken from, so footprints have to be estimated from other metadata contained in the images.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">How it works</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">This plugin estimates the footprints using several bits of metadata contained in the image EXIF tags:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Image location (latitude and longitude)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Height above ground level (m)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Gimbal pitch (-90</span><span style=\" font-family:\'Google Sans\',\'Arial\',\'sans-serif\'; font-size:8pt; color:#1f1f1f; background-color:#ffffff;\">° </span><span style=\" font-size:8pt;\">means camera is pointing straight down - nadir)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Gimbal yaw (direction the sensor is facing with respect to North)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Focal length of sensor</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Sensor dimensions</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- Image dimensions</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">Everything except the sensor dimensions can typically be extracted programtically from the EXIF data. Sensor dimensions (width and height) are typically not contained in the EXIF data, so there is a option to manually specify these in case the have not been included in the plugin\'s backend.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">The plugin will generate footprints for all images in the input folder (including subfolders) and will export footprints in geojson format.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt; font-weight:600;\">Resources</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- The math used in this plugin is based off the </span><a href=\"https://gis.stackexchange.com/questions/384756/georeference-single-drone-image-from-exif-data\"><span style=\" font-size:8pt; text-decoration: underline; color:#0000ff;\">forum post</span></a><span style=\" font-size:8pt;\"> by Houska on GIS StackExchange</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8pt;\">- A more sophisticated Python repositry for georefencing individual drone images developed by spifftek70 is available on GitHub: </span><a href=\"https://github.com/spifftek70/Drone-Footprints\"><span style=\" font-size:8pt; text-decoration: underline; color:#0000ff;\">Drone-Footprints</span></a><span style=\" font-size:8pt;\">.</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_about), _translate("RPA_Footprints", "About"))
